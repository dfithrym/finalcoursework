# import libraries
from bs4 import BeautifulSoup
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
import csv
import time
import pandas as pd
import numpy as np
# import matplotl
import matplotlib.pyplot as plt
## specify the url
url = 'https://kawalpemilu.org/#pilpres:0'

# The path to where you have your chrome webdriver stored:
webdriver_path = 'D:/DZ.2/chromedriver.exe'

# Add arguments telling Selenium to not actually open a window
chrome_options = Options()
chrome_options.add_argument('--headless')
chrome_options.add_argument('--window-size=1920x1080')

# Fire up the headless browser
browser = webdriver.Chrome(executable_path=webdriver_path,
                           options=chrome_options)

# Load webpage
browser.get(url)

# It can be a good idea to wait for a few seconds before trying to parse the page
# to ensure that the page has loaded completely.
time.sleep(10)

# Parse HTML, close browser
soup = BeautifulSoup(browser.page_source, 'html.parser')
pretty = soup.prettify()
# print(pretty)
browser.quit()
# print(soup)
# find results within table
results = soup.find('table',{'class':'table'})
rows = results.find_all('tr',{'class':'row'})
# print(rows)
array = []
jokowi = []
prabowo = []
sumatera =['ACEH', 'SUMATERA UTARA', 'SUMATERA BARAT', 'RIAU',
            'JAMBI', 'SUMATERA SELATAN', 'BENGKULU', 'LAMPUNG']


# print(rows)
for r in rows:
    # find all columns per result
    data = r.find_all('td')
    print(data)
    # check that columns have data
    if len(data) == 0:
        continue
# write columns to variables
    wilayah = data[1].find('a').getText()
    if wilayah in sumatera:
        satu = data[2].find('span', attrs={'class': 'abs'}).getText()
        dua = data[3].find('span', attrs={'class': 'abs'}).getText()
        # Remove decimal point
        satu = satu.replace('.', '')
        dua = dua.replace('.', '')
        # Cast Data Type Integer
        satu = int(satu)
        dua = int(dua)
        array.append(wilayah)
        jokowi.append(satu)
        prabowo.append((dua))

# Convert to numpy
print (jokowi)
print (prabowo)
np_array = np.array(array)
np_jokowi= np.array(jokowi)
np_prabowo= np.array(prabowo)
print(np_jokowi)
print(np_prabowo)
# # Convert to numpy
np_array2 = np.array(array)
#np_databps= np.array(databps)
# np_prabowo2= np.array(prabowo)

# Naming label
plt.xlabel('provinsi')
plt.ylabel('perolehan suara')

# styling x,y value
plt.xticks(rotation=30,ha='right')
# plt.yticks(np.arange(np_jokowi.min(),np_jokowi.max(),4000000))

# plot data
plt.plot(np_array,np_jokowi,color='yellow',label='Jokowi 2019',linestyle='--', marker='o')

plt.plot(np_array,np_prabowo,color='orange',label='Prabowo 2019',linestyle='--', marker='o')

plt.legend(loc='upper right')
plt.yscale('linear')
plt.show()
